name: Build, Push, and Deploy to SDV

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context:.
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create Desired State Manifest
        id: create_manifest
        run: |
          IMAGE_TAG=$(echo ${{ steps.meta.outputs.tags }} | cut -d ',' -f 1)
          VERSION=$(echo ${{ github.ref_name }})
          cat <<EOF > desired-state.json
          {
            "payload": {
              "domains":
                    }
                  ]
                }
              ]
            }
          }
          EOF
          echo "Manifest created for image $IMAGE_TAG"

      - name: Trigger hawkBit Rollout
        env:
          HAWKBIT_URL: ${{ secrets.HAWKBIT_URL }}
          HAWKBIT_USER: ${{ secrets.HAWKBIT_USER }}
          HAWKBIT_PASS: ${{ secrets.HAWKBIT_PASS }}
          TARGET_ID: ${{ secrets.TARGET_DEVICE_ID }}
          VERSION: ${{ github.ref_name }}
        run: |
          # Step 1: Create Software Module
          MODULE_ID=$(curl -s -u $HAWKBIT_USER:$HAWKBIT_PASS -X POST "$HAWKBIT_URL/rest/v1/softwaremodules" \
            -H "Content-Type: application/json" \
            -d '' | jq -r '..id')
          
          # Step 2: Upload Artifact (Desired State Manifest)
          curl -s -u $HAWKBIT_USER:$HAWKBIT_PASS -X POST "$HAWKBIT_URL/rest/v1/softwaremodules/$MODULE_ID/artifacts" \
            -H "Content-Type: multipart/form-data" \
            -F "file=@desired-state.json"
            
          # Step 3: Create Distribution Set
          DIST_ID=$(curl -s -u $HAWKBIT_USER:$HAWKBIT_PASS -X POST "$HAWKBIT_URL/rest/v1/distributionsets" \
            -H "Content-Type: application/json" \
            -d '' | jq -r '..id')
            
          # Step 4: Assign Module to Distribution
          curl -s -u $HAWKBIT_USER:$HAWKBIT_PASS -X POST "$HAWKBIT_URL/rest/v1/distributionsets/$DIST_ID/modules" \
            -H "Content-Type: text/uri-list" \
            --data-binary "$HAWKBIT_URL/rest/v1/softwaremodules/$MODULE_ID"
            
          # Step 5: Create and Start Rollout
          curl -s -u $HAWKBIT_USER:$HAWKBIT_PASS -X POST "$HAWKBIT_URL/rest/v1/rollouts" \
            -H "Content-Type: application/json" \
            -d '{"name": "Deploy '$VERSION'", "distributionSet": "'$HAWKBIT_URL/rest/v1/distributionsets/$DIST_ID'", "targets":, "start": true}'