#.github/workflows/deploy.yml
name: Build, Push, and Deploy Container

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context:.
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  trigger-ota-update:
    needs: build-and-push-image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      
      - name: Install MQTT client
        run: pip install paho-mqtt

      - name: Generate Desired State JSON
        id: desired_state
        run: |
          IMAGE_TAG=$(echo ${{ github.sha }} | cut -c1-7)
          JSON_CONTENT=$(cat./.github/workflows/desired-state-template.json | \
                         sed "s/\\\${IMAGE_TAG}/$IMAGE_TAG/g" | \
                         sed "s|\\\${IMAGE_NAME}|${{ env.IMAGE_NAME }}|g")
          echo "payload=$JSON_CONTENT" >> $GITHUB_OUTPUT
        
      - name: Publish Desired State to MQTT
        env:
          MQTT_HOST: ${{ secrets.MQTT_HOST }}
          MQTT_USER: ${{ secrets.MQTT_USER }}
          MQTT_PASS: ${{ secrets.MQTT_PASS }}
          DEVICE_TENANT: ${{ secrets.DEVICE_TENANT }}
          DEVICE_ID: ${{ secrets.DEVICE_ID }}
          DESIRED_STATE_PAYLOAD: ${{ steps.desired_state.outputs.payload }}
        run: |
          python./.github/workflows/publish_mqtt.py